{"version":3,"sources":["component/Today/Today.js","component/Histoy/History.js","App.js","serviceWorker.js","index.js"],"names":["Today","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currt","current","toggle","push","btNow","state","btcprice","etNow","ethprice","ltNow","ltcprice","console","log","INR","btcInr","ltcInr","ethInr","toggle1","toggle2","toggle3","_this2","setInterval","axios","get","then","response","sendPricePusher","data","catch","error","prices","bind","price","setState","BTC","USD","ETH","LTC","post","_this3","pusher","Pusher","cluster","encrypted","subscribe","rates","toFixed","display","objectSpread","react_default","a","createElement","className","Component","History","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","getBTCPrices","assertThisInitialized","getETHPrices","getLTCPrices","date","t","moment","unix","all","spread","eth","btc","ltc","f","format","subtract","_this4","_this5","_this6","getTodayPrice","getYesterdayPrice","getTwoDaysPrice","getThreeDaysPrice","getFourDaysPrice","App","href","target","rel","component_Today_Today","component_Histoy_History","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iWAuLeA,cAhLX,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAuFPI,MAAM,SAACC,GACJ,IAAIC,EAAO,GAKZ,OAJCA,EAAOC,KAAKF,EAAQG,OAAOX,EAAKY,MAAMC,UACtCJ,EAAOC,KAAKF,EAAQM,OAAOd,EAAKY,MAAMG,UACtCN,EAAOC,KAAKF,EAAQQ,OAAOhB,EAAKY,MAAMK,UACtCC,QAAQC,IAAIV,GACNA,GA5FFT,EAAKY,MAAQ,CACTC,SAAU,GACVI,SAAU,GACVF,SAAU,GACVK,IAAI,GACJC,OAAO,GACPC,OAAO,GACPC,OAAO,GACPZ,MAAM,GACNG,MAAM,GACNE,MAAM,GACNQ,SAAQ,EACRC,SAAQ,EACRC,SAAQ,GAfD1B,mFAqBM,IAAA2B,EAAAxB,KACjByB,YAAY,WACRC,IAAMC,IAAI,iFACLC,KAAK,SAAAC,GACFL,EAAKM,gBAAiBD,EAASE,QAElCC,MAAM,SAAAC,GACHlB,QAAQC,IAAIiB,MAErB,KAEPjC,KAAKkC,OAAOC,KAAK,SAAU,SAAAC,GAC3BZ,EAAKa,SAAS,CAAE7B,MAAO4B,EAAMF,OAAOI,IAAIC,IACpC5B,MAAOyB,EAAMF,OAAOM,IAAID,IACxB1B,MAAOuB,EAAMF,OAAOO,IAAIF,OAE3BvC,8CAEiB+B,GACdL,IAAMgB,KAAK,cAAe,CACtBR,OAAQH,IAETH,KAAK,SAAAC,GACFd,QAAQC,IAAIa,KAEfG,MAAM,SAAAC,GACHlB,QAAQC,IAAIiB,kDAIA,IAAAU,EAAA3C,KAClBA,KAAK4C,OAAS,IAAIC,IAAO,uBAAwB,CAC7CC,QAAS,MACTC,WAAW,IAGf/C,KAAKkC,OAASlC,KAAK4C,OAAOI,UAAU,eACpCtB,IAAMC,IAAI,iFACNC,KAAK,SAAAC,GAEDc,EAAKN,SAAS,CAAE3B,SAAUmB,EAASE,KAAKO,IAAIC,MAC5CI,EAAKN,SAAS,CAAEzB,SAAUiB,EAASE,KAAKS,IAAID,MAC5CI,EAAKN,SAAS,CAAEvB,SAAUe,EAASE,KAAKU,IAAIF,QAI/CP,MAAM,SAAAC,GACHlB,QAAQC,IAAIiB,KAEhBP,IAAMC,IAAI,kDACTC,KAAK,SAAAC,GAGFc,EAAKN,SAAS,CACVpB,IAAIY,EAASE,KAAKkB,MAAMhC,IAAIiC,QAAQ,OAK3ClB,MAAM,SAAAC,GACHlB,QAAQC,IAAIiB,sCAqBpB,IAAIkB,EAAQ,KACZ,GAAGnD,KAAKS,MAAM,CACV,IAAIJ,EAAQP,OAAAsD,EAAA,EAAAtD,CAAA,GACLE,KAAKS,OAGZM,QAAQC,IAAIX,EAAQG,OACpBO,QAAQC,IAAIX,EAAQM,OACpBI,QAAQC,IAAIX,EAAQQ,OACpB,IAAIP,EAAON,KAAKI,MAAMC,GACvBL,KAAKS,MAAMY,QAAQf,EAAO,GAC1BN,KAAKS,MAAMa,QAAQhB,EAAO,GAC1BN,KAAKS,MAAMc,QAAQjB,EAAO,GAC1BN,KAAKS,MAAMC,SAASL,EAAQG,MAC5BR,KAAKS,MAAMG,SAASP,EAAQM,MAC5BX,KAAKS,MAAMK,SAAST,EAAQQ,MAG3Bb,KAAKS,MAAMS,QAAQlB,KAAKS,MAAMC,SAAWV,KAAKS,MAAMQ,KAAKiC,QAAQ,GAChElD,KAAKS,MAAMU,QAAQnB,KAAKS,MAAMK,SAAWd,KAAKS,MAAMQ,KAAKiC,QAAQ,GAChElD,KAAKS,MAAMW,QAAQpB,KAAKS,MAAMG,SAAWZ,KAAKS,MAAMQ,KAAKiC,QAAQ,GAEnEC,EACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACfH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,cAAMvD,KAAKS,MAAMC,UACjB2C,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,oBACLF,EAAAC,EAAAC,cAAA,mBAAYvD,KAAKS,MAAMS,SAE5BmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAWxD,KAAKS,MAAMY,QAAU,WAAW,iBAKzDgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACPH,EAAAC,EAAAC,cAAA,cAAMvD,KAAKS,MAAMG,UACjByC,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,mBAAL,KACAF,EAAAC,EAAAC,cAAA,mBAAYvD,KAAKS,MAAMW,SAE/BiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAWxD,KAAKS,MAAMa,QAAU,WAAW,iBAIzD+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,cAAMvD,KAAKS,MAAMK,UACjBuC,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,oBACLF,EAAAC,EAAAC,cAAA,mBAAYvD,KAAKS,MAAMU,SAE3BkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAWxD,KAAKS,MAAMc,QAAU,WAAW,mBAQrE,OACI8B,EAAAC,EAAAC,cAAA,WAEUJ,UA3KFM,4CC6MLC,cA5MP,SAAAA,IAAe,IAAA7D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,IACb7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,QACKS,MAAQ,CACTkD,WAAY,GACZC,eAAgB,GAChBC,aAAc,GACdC,eAAgB,GAChBC,cAAe,IAEnBlE,EAAKmE,aAAenE,EAAKmE,aAAa7B,KAAlBrC,OAAAmE,EAAA,EAAAnE,CAAAD,IACpBA,EAAKqE,aAAerE,EAAKqE,aAAa/B,KAAlBrC,OAAAmE,EAAA,EAAAnE,CAAAD,IACpBA,EAAKsE,aAAetE,EAAKsE,aAAahC,KAAlBrC,OAAAmE,EAAA,EAAAnE,CAAAD,IAXPA,4EAcAuE,GACX,OAAO1C,IAAMC,IAAI,gFAAkFyC,wCAGzFA,GACV,OAAO1C,IAAMC,IAAI,gFAAkFyC,wCAGzFA,GACV,OAAO1C,IAAMC,IAAI,gFAAkFyC,2CAI1F,IAAA5C,EAAAxB,KAETqE,EAAIC,MAASC,OAEjB7C,IAAM8C,IAAI,CAACxE,KAAKkE,aAAaG,GAAIrE,KAAKgE,aAAaK,GAAIrE,KAAKmE,aAAaE,KACpEzC,KAAKF,IAAM+C,OAAO,SAACC,EAAKC,EAAKC,GAC1B,IAAIC,EAAI,CACJT,KAAME,IAAOC,KAAKF,GAAGS,OAAO,gBAC5BJ,IAAKA,EAAI3C,KAAKS,IAAID,IAClBoC,IAAKA,EAAI5C,KAAKO,IAAIC,IAClBqC,IAAKA,EAAI7C,KAAKU,IAAIF,KAGtBf,EAAKa,SAAS,CAAEsB,WAAYkB,mDAInB,IAAAlC,EAAA3C,KAEbqE,EAAIC,MAASS,SAAS,EAAG,QAAQR,OAErC7C,IAAM8C,IAAI,CAACxE,KAAKkE,aAAaG,GAAIrE,KAAKgE,aAAaK,GAAIrE,KAAKmE,aAAaE,KACpEzC,KAAKF,IAAM+C,OAAO,SAACC,EAAKC,EAAKC,GAC1B,IAAIC,EAAI,CACJT,KAAME,IAAOC,KAAKF,GAAGS,OAAO,gBAC5BJ,IAAKA,EAAI3C,KAAKS,IAAID,IAClBoC,IAAKA,EAAI5C,KAAKO,IAAIC,IAClBqC,IAAKA,EAAI7C,KAAKU,IAAIF,KAGtBI,EAAKN,SAAS,CAAEuB,eAAgBiB,iDAIzB,IAAAG,EAAAhF,KAEXqE,EAAIC,MAASS,SAAS,EAAG,QAAQR,OAErC7C,IAAM8C,IAAI,CAACxE,KAAKkE,aAAaG,GAAIrE,KAAKgE,aAAaK,GAAIrE,KAAKmE,aAAaE,KACpEzC,KAAKF,IAAM+C,OAAO,SAACC,EAAKC,EAAKC,GAC1B,IAAIC,EAAI,CACJT,KAAME,IAAOC,KAAKF,GAAGS,OAAO,gBAC5BJ,IAAKA,EAAI3C,KAAKS,IAAID,IAClBoC,IAAKA,EAAI5C,KAAKO,IAAIC,IAClBqC,IAAKA,EAAI7C,KAAKU,IAAIF,KAGtByC,EAAK3C,SAAS,CAAEwB,aAAcgB,mDAIrB,IAAAI,EAAAjF,KAEbqE,EAAIC,MAASS,SAAS,EAAG,QAAQR,OAErC7C,IAAM8C,IAAI,CAACxE,KAAKkE,aAAaG,GAAIrE,KAAKgE,aAAaK,GAAIrE,KAAKmE,aAAaE,KACpEzC,KAAKF,IAAM+C,OAAO,SAACC,EAAKC,EAAKC,GAC1B,IAAIC,EAAI,CACJT,KAAME,IAAOC,KAAKF,GAAGS,OAAO,gBAC5BJ,IAAKA,EAAI3C,KAAKS,IAAID,IAClBoC,IAAKA,EAAI5C,KAAKO,IAAIC,IAClBqC,IAAKA,EAAI7C,KAAKU,IAAIF,KAGtB0C,EAAK5C,SAAS,CAAEyB,eAAgBe,kDAIxB,IAAAK,EAAAlF,KAEZqE,EAAIC,MAASS,SAAS,EAAG,QAAQR,OAErC7C,IAAM8C,IAAI,CAACxE,KAAKkE,aAAaG,GAAIrE,KAAKgE,aAAaK,GAAIrE,KAAKmE,aAAaE,KACpEzC,KAAKF,IAAM+C,OAAO,SAACC,EAAKC,EAAKC,GAC1B,IAAIC,EAAI,CACJT,KAAME,IAAOC,KAAKF,GAAGS,OAAO,gBAC5BJ,IAAKA,EAAI3C,KAAKS,IAAID,IAClBoC,IAAKA,EAAI5C,KAAKO,IAAIC,IAClBqC,IAAKA,EAAI7C,KAAKU,IAAIF,KAGtB2C,EAAK7C,SAAS,CAAE0B,cAAec,oDAKvC7E,KAAKmF,gBACLnF,KAAKoF,oBACLpF,KAAKqF,kBACLrF,KAAKsF,oBACLtF,KAAKuF,oDAGL,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAKvD,KAAKS,MAAMkD,WAAWS,MAC3Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMkD,WAAWgB,MAEvCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMkD,WAAWe,MAEvCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMkD,WAAWiB,QAI/CvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAKvD,KAAKS,MAAMmD,eAAeQ,MAC/Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMmD,eAAee,MAE3CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMmD,eAAec,MAE3CrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMmD,eAAegB,QAInDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAKvD,KAAKS,MAAMoD,aAAaO,MAC7Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMoD,aAAac,MAEzCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMoD,aAAaa,MAEzCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMoD,aAAae,QAIjDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAKvD,KAAKS,MAAMqD,eAAeM,MAC/Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMqD,eAAea,MAE3CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMqD,eAAeY,MAE3CrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMqD,eAAec,QAInDvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAKvD,KAAKS,MAAMsD,cAAcK,MAC9Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMsD,cAAcY,MAE1CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMsD,cAAcW,MAE1CrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qBAAavD,KAAKS,MAAMsD,cAAca,iBA/L5CnB,aCkCX+B,mLA5BX,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,gBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAciC,KAAK,qBAAqBC,OAAO,SAASC,IAAI,uBAAzE,kBAKhBtC,EAAAC,EAAAC,cAAA,WAASC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,0CAAiCF,EAAAC,EAAAC,cAAA,WAAjC,uBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAD,gBAtBApC,aCGEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GACjCA,EAAaC","file":"static/js/main.c8cdf2a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n    import './Today.css';\r\n    import axios from 'axios'\r\n    import Pusher from 'pusher-js';\r\n\r\nclass Today extends Component {\r\n    // Adds a class constructor that assigns the initial state values:\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            btcprice: '',\r\n            ltcprice: '',\r\n            ethprice: '',\r\n            INR:'',\r\n            btcInr:'',\r\n            ltcInr:'',\r\n            ethInr:'',\r\n            btNow:'',\r\n            etNow:'',\r\n            ltNow:'',\r\n            toggle1:false,\r\n            toggle2:false,\r\n            toggle3:false,\r\n        };\r\n        \r\n    }\r\n    \r\n    \r\n    componentDidMount () {\r\n        setInterval(() => {\r\n            axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\r\n                .then(response => {\r\n                    this.sendPricePusher (response.data)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }, 10000);\r\n        // We bind to the 'prices' event and use the data in it (price information) to update the state values, thus, realtime changes \r\n    this.prices.bind('prices', price => {\r\n    this.setState({ btNow: price.prices.BTC.USD,\r\n        etNow: price.prices.ETH.USD,\r\n        ltNow: price.prices.LTC.USD });\r\n   \r\n  }, this);\r\n     }\r\n     sendPricePusher (data) {\r\n        axios.post('/prices/new', {\r\n            prices: data\r\n        })\r\n          .then(response => {\r\n              console.log(response)\r\n          })\r\n          .catch(error => {\r\n              console.log(error)\r\n          })\r\n     }\r\n    // This is called when an instance of a component is being created and inserted into the DOM.\r\n    componentWillMount () {\r\n        this.pusher = new Pusher('f31d140bd4740042a0f7', {\r\n            cluster: 'ap2',\r\n            encrypted: true\r\n        });\r\n        // Subscribe to the 'coin-prices' channel\r\n        this.prices = this.pusher.subscribe('coin-prices');\r\n        axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD')\r\n           .then(response=>{\r\n                 \r\n                this.setState({ btcprice: response.data.BTC.USD });\r\n                this.setState({ ethprice: response.data.ETH.USD });\r\n                this.setState({ ltcprice: response.data.LTC.USD });\r\n           \r\n            })\r\n            // Catch any error here\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n            axios.get('https://api.exchangerate-api.com/v4/latest/USD')\r\n            .then(response => {\r\n                // We set the latest prices in the state to the prices gotten from Cryptocurrency.\r\n                /* console.log(response.data.rates.INR); */\r\n                this.setState({\r\n                    INR:response.data.rates.INR.toFixed(2)\r\n                });\r\n               \r\n            })\r\n            // Catch any error here\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n              // establish a connection to Pusher\r\n \r\n    };\r\n    // The render method contains the JSX code which will be compiled to HTML.\r\n   \r\n currt=(current)=>{\r\n    let toggle=[];\r\n    toggle.push(current.btNow>=this.state.btcprice ?true:false);\r\n    toggle.push(current.etNow>=this.state.ethprice ?true:false);\r\n    toggle.push(current.ltNow>=this.state.ltcprice ?true:false);\r\n    console.log(toggle);\r\n   return toggle;\r\n   \r\n }\r\n \r\n\r\n    render() {\r\n       \r\n        \r\n        let display=null;\r\n        if(this.state){\r\n            let current={\r\n                ...this.state\r\n                \r\n            }\r\n            console.log(current.btNow);\r\n            console.log(current.etNow);\r\n            console.log(current.ltNow);\r\n            let toggle=this.currt(current);\r\n           this.state.toggle1=toggle[0];\r\n           this.state.toggle2=toggle[1];\r\n           this.state.toggle3=toggle[2];\r\n           this.state.btcprice=current.btNow;\r\n           this.state.ethprice=current.etNow;\r\n           this.state.ltcprice=current.ltNow;\r\n          \r\n            \r\n           {this.state.btcInr=(this.state.btcprice * this.state.INR).toFixed(2)}\r\n            {this.state.ltcInr=(this.state.ltcprice * this.state.INR).toFixed(2)}\r\n            { this.state.ethInr=(this.state.ethprice * this.state.INR).toFixed(2)}\r\n\r\n            display=(\r\n                <div className=\"today--section container\">\r\n                <h2>Current Price</h2>\r\n                <div className=\"columns today--section__box\">\r\n                    <div className=\"column btc--section\">\r\n                        <div className=\"price\">   \r\n                            <h5>${this.state.btcprice}</h5>\r\n                            <p>1 <span>BTC</span></p>\r\n                            <h5>&#8377;{this.state.btcInr}</h5>\r\n                        </div>\r\n                       <div className=\"upordown\">\r\n                             <div className={this.state.toggle1 ? \"up-arrow\":\"down-arrow\" }></div>\r\n                            \r\n                       </div>\r\n                     \r\n                    </div>\r\n                    <div className=\"column eth--section\">\r\n                        <div className=\"price\">\r\n                                <h5>${this.state.ethprice}</h5>\r\n                                <p>1 <span>ETH</span> </p>\r\n                                <h5>&#8377;{this.state.ethInr }</h5>\r\n                        </div>\r\n                        <div className=\"upordown\">\r\n                             <div className={this.state.toggle2 ? \"up-arrow\":\"down-arrow\" }></div>\r\n                            \r\n                       </div>\r\n                    </div>\r\n                    <div className=\"column ltc--section\">\r\n                        <div className=\"price\">\r\n                            <h5>${this.state.ltcprice}</h5>\r\n                            <p>1 <span>LTC</span></p>\r\n                            <h5>&#8377;{this.state.ltcInr }</h5>\r\n                        </div>\r\n                        <div className=\"upordown\">\r\n                             <div className={this.state.toggle3 ? \"up-arrow\":\"down-arrow\" }></div>\r\n                            \r\n                       </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n             \r\n                     {display}\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default Today;","import React, { Component } from 'react';\r\n    import './History.css'\r\n    import axios from 'axios';\r\n    import moment from 'moment';\r\n\r\n    class History extends Component {\r\n        constructor () {\r\n          super();\r\n          this.state = {\r\n              todayprice: {},\r\n              yesterdayprice: {},\r\n              twodaysprice: {},\r\n              threedaysprice: {},\r\n              fourdaysprice: {}\r\n          }\r\n          this.getBTCPrices = this.getBTCPrices.bind(this);\r\n          this.getETHPrices = this.getETHPrices.bind(this);\r\n          this.getLTCPrices = this.getLTCPrices.bind(this);\r\n        }\r\n         // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\r\n         getETHPrices (date) {\r\n            return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=' + date);\r\n        }\r\n        // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\r\n        getBTCPrices (date) {\r\n            return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=' + date);\r\n        }\r\n        // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\r\n        getLTCPrices (date) {\r\n            return axios.get('https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=' + date);\r\n        }\r\n\r\n        // This function gets the prices for the current date.\r\n    getTodayPrice () {\r\n        // Get today's date in timestamp\r\n        let t = moment().unix()\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of todayprice to the content of the object f\r\n                this.setState({ todayprice: f });\r\n            }));\r\n    }\r\n    // This function gets the prices for the yesterday.\r\n    getYesterdayPrice () {\r\n        // Get yesterday's date in timestamp\r\n        let t = moment().subtract(1, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of yesterdayprice to the content of the object f\r\n                this.setState({ yesterdayprice: f });\r\n            }));\r\n    }\r\n    // This function gets the prices for the two days ago.\r\n    getTwoDaysPrice () {\r\n        // Get the date for two days ago in timestamp\r\n        let t = moment().subtract(2, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of twodaysprice to the content of the object f\r\n                this.setState({ twodaysprice: f });\r\n            }));\r\n    }\r\n    // This function gets the prices for the three days ago.\r\n    getThreeDaysPrice () {\r\n        // Get the date for three days ago in timestamp\r\n        let t = moment().subtract(3, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of threedaysprice to the content of the object f\r\n                this.setState({ threedaysprice: f });\r\n            }));\r\n    }\r\n    // This function gets the prices for the four days ago.\r\n    getFourDaysPrice () {\r\n        // Get the date for four days ago in timestamp\r\n        let t = moment().subtract(4, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of fourdaysprice to the content of the object f\r\n                this.setState({ fourdaysprice: f });\r\n            }));\r\n    }\r\n    // This is called when an instance of a component is being created and inserted into the DOM.\r\n    componentWillMount () {\r\n        this.getTodayPrice();\r\n        this.getYesterdayPrice();\r\n        this.getTwoDaysPrice();\r\n        this.getThreeDaysPrice();\r\n        this.getFourDaysPrice();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"history--section container\">\r\n                <h2>History (Past 5 days)</h2>\r\n                <div className=\"history--section__box\">\r\n                    <div className=\"history--section__box__inner\">\r\n                        <h4>{this.state.todayprice.date}</h4>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <p>1 BTC = ${this.state.todayprice.btc}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 ETH = ${this.state.todayprice.eth}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 LTC = ${this.state.todayprice.ltc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"history--section__box__inner\">\r\n                        <h4>{this.state.yesterdayprice.date}</h4>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <p>1 BTC = ${this.state.yesterdayprice.btc}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 ETH = ${this.state.yesterdayprice.eth}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 LTC = ${this.state.yesterdayprice.ltc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"history--section__box__inner\">\r\n                        <h4>{this.state.twodaysprice.date}</h4>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <p>1 BTC = ${this.state.twodaysprice.btc}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 ETH = ${this.state.twodaysprice.eth}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 LTC = ${this.state.twodaysprice.ltc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"history--section__box__inner\">\r\n                        <h4>{this.state.threedaysprice.date}</h4>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <p>1 BTC = ${this.state.threedaysprice.btc}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 ETH = ${this.state.threedaysprice.eth}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 LTC = ${this.state.threedaysprice.ltc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"history--section__box__inner\">\r\n                        <h4>{this.state.fourdaysprice.date}</h4>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <p>1 BTC = ${this.state.fourdaysprice.btc}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 ETH = ${this.state.fourdaysprice.eth}</p>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <p>1 LTC = ${this.state.fourdaysprice.ltc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n   \r\n      \r\n     \r\n\r\nexport default History;","// Import React and Component\nimport React, { Component } from 'react';\n// Import CSS from App.css\nimport './App.css';\n// Import the Today component to be used below\nimport Today from './component/Today/Today';\n// Import the History component to be used below\nimport History from './component/Histoy/History';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n          <div className=\"topheader\">\n              <header className=\"container\">\n                  <nav className=\"navbar\">\n                      <div className=\"navbar-brand\">\n                          <span className=\"navbar-item\">PusherCoins</span>\n                      </div>\n                      <div className=\"navbar-end\">\n                          <a className=\"navbar-item\" href=\"https://pusher.com\" target=\"_blank\" rel=\"noopener noreferrer\">Pusher.com</a>\n                      </div>\n                  </nav>\n              </header>\n          </div>\n          <section className=\"results--section\">\n              <div className=\"container\">\n                  <h1>RealTime Price Informer about<br></br> BTC, ETH and LTC.</h1>\n              </div>\n              <div className=\"results--section__inner\">\n                  <Today />\n                  <History />\n              </div>\n          </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}